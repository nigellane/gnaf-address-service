apiVersion: apps/v1
kind: Deployment
metadata:
  name: gnaf-app-deployment
  namespace: gnaf-system
  labels:
    app: gnaf-address-service
    component: application
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gnaf-address-service
      component: application
  template:
    metadata:
      labels:
        app: gnaf-address-service
        component: application
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        fsGroup: 1001
      containers:
      - name: gnaf-app
        image: gnaf-address-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: LOG_LEVEL
        - name: LOG_TO_FILE
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: LOG_TO_FILE
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: gnaf-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: gnaf-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: gnaf-secrets
              key: JWT_SECRET
        - name: API_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: gnaf-secrets
              key: API_KEY_SECRET
        - name: CORS_ORIGIN
          valueFrom:
            secretKeyRef:
              name: gnaf-secrets
              key: CORS_ORIGIN
        - name: CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: CACHE_TTL
        - name: CACHE_MAX_KEYS
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: CACHE_MAX_KEYS
        - name: ENABLE_L1_CACHE
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: ENABLE_L1_CACHE
        - name: ENABLE_L2_CACHE
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: ENABLE_L2_CACHE
        - name: ENABLE_L3_CACHE
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: ENABLE_L3_CACHE
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: RATE_LIMIT_WINDOW_MS
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: RATE_LIMIT_MAX_REQUESTS
        - name: PROMETHEUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: PROMETHEUS_ENABLED
        - name: HEALTH_CHECK_ENABLED
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: HEALTH_CHECK_ENABLED
        - name: METRICS_PATH
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: METRICS_PATH
        - name: MAX_CONCURRENT_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: MAX_CONCURRENT_REQUESTS
        - name: REQUEST_TIMEOUT_MS
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: REQUEST_TIMEOUT_MS
        - name: DB_CONNECTION_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: DB_CONNECTION_POOL_SIZE
        - name: SLOW_QUERY_THRESHOLD_MS
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: SLOW_QUERY_THRESHOLD_MS
        - name: ENABLE_REQUEST_LOGGING
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: ENABLE_REQUEST_LOGGING
        - name: ENABLE_PERFORMANCE_LOGGING
          valueFrom:
            configMapKeyRef:
              name: gnaf-config
              key: ENABLE_PERFORMANCE_LOGGING
        - name: GEOCODING_API_KEY
          valueFrom:
            secretKeyRef:
              name: gnaf-secrets
              key: GEOCODING_API_KEY
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/v1/health/live
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health/ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/v1/health/live
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: gnaf-app-service
  namespace: gnaf-system
  labels:
    app: gnaf-address-service
    component: application
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: gnaf-address-service
    component: application

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gnaf-app-hpa
  namespace: gnaf-system
  labels:
    app: gnaf-address-service
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gnaf-app-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30